esphome:
  name: esphome-web-8b7918
  friendly_name: Room

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "Your Key"

# webserver
web_server:

# OTA
ota:
  platform: esphome
  password: "Your Password"


wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Esphome-Web-8B7918"
    password: "XrWH670zkeUH"

captive_portal:
  
i2c:
  sda: GPIO21
  scl: GPIO22
  scan: true
  id: bus_a    



# We can't use buttons and outputs, because we need to be able to
# read the output's state for the input filtering below.
switch:
  - platform: gpio
    id: output_up
    pin: GPIO14
    on_turn_on:
      then:
        - delay: 200ms
        - switch.turn_off: output_up
  - platform: gpio
    id: output_stop
    pin: GPIO13
    on_turn_on:
      then:
        - delay: 200ms
        - switch.turn_off: output_stop
  - platform: gpio
    id: output_down
    pin: GPIO12
    on_turn_on:
      then:
        - delay: 200ms
        - switch.turn_off: output_down

# These pins are connected to the output, and will be low if either:
# - We set the output pins
# - Someone presses the physical buttons on the original remote
#
# To avoid interference from ourselves, we ignore the input pins
# if we're the ones driving the output low.
binary_sensor:
  - platform: gpio
    id: sense_up
    pin: GPIO27
    filters:
      - lambda: !lambda return !(x || id(output_up).state);
    on_press:
      then:
        - cover.open: shutters
  - platform: gpio
    id: sense_stop
    pin: GPIO26
    filters:
      - lambda: !lambda return !(x || id(output_stop).state);
    on_press:
      then:
        - cover.stop: shutters
  - platform: gpio
    id: sense_down
    pin: GPIO25
    filters:
      - lambda: !lambda return !(x || id(output_down).state);
    on_press:
      then:
        - cover.close: shutters

cover:
  - platform: time_based
    id: shutters
    name: Window Shutters
    has_built_in_endstop: true
    manual_control: true
    assumed_state: true

    open_action:
      - switch.turn_on: output_up
    open_duration: 35s # measure this

    close_action:
      - switch.turn_on: output_down
    close_duration: 35s # measure this

    stop_action:
      - switch.turn_on: output_stop

sensor:
  - platform: bme280_i2c
    temperature:
     name: "BME280 Temperature"
    pressure:
     name: "BME280 Pressure"
    humidity:
     name: "BME280 Humidity"
    address: 0x76
    update_interval: 120s

